import sqlite3
import os

# –ü—É—Ç—å –∫ –≤–∞—à–µ–π –ë–î
DB_PATH = "data/gio_crypto_bot.db"

print(f"üîç –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î: {DB_PATH}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ë–î
if not os.path.exists(DB_PATH):
    print(f"‚ùå –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DB_PATH}")
    exit(1)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
conn = sqlite3.connect(DB_PATH)
cursor = conn.cursor()

print("üìã –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É signals...")

# –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—É signals
cursor.execute("""
CREATE TABLE IF NOT EXISTS signals (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    timestamp TEXT NOT NULL,
    symbol TEXT NOT NULL,
    timeframe TEXT,
    signal_type TEXT,
    price REAL,
    confidence REAL,
    indicators TEXT,
    status TEXT DEFAULT 'active',
    created_at TEXT DEFAULT CURRENT_TIMESTAMP
)
""")

conn.commit()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ
cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='signals'")
result = cursor.fetchone()

if result:
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ signals —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("PRAGMA table_info(signals)")
    columns = cursor.fetchall()
    print("\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã signals:")
    for col in columns:
        print(f"   - {col[1]} ({col[2]})")
else:
    print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã!")

conn.close()
print("\nüéâ –ì–æ—Ç–æ–≤–æ!")
