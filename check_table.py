import sqlite3
import os

DB_PATH = "data/gio_crypto_bot.db"

if not os.path.exists(DB_PATH):
    print(f"‚ùå –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {DB_PATH}")
    exit(1)

conn = sqlite3.connect(DB_PATH)
cursor = conn.cursor()

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã signals
cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='signals'")
result = cursor.fetchone()

if result:
    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ signals –°–£–©–ï–°–¢–í–£–ï–¢!")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    cursor.execute("PRAGMA table_info(signals)")
    columns = cursor.fetchall()
    print("\nüìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
    for col in columns:
        print(f"   {col[0]}. {col[1]} ({col[2]})")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
    cursor.execute("SELECT COUNT(*) FROM signals")
    count = cursor.fetchone()[0]
    print(f"\nüìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {count}")
else:
    print("‚ùå –¢–∞–±–ª–∏—Ü–∞ signals –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!")

conn.close()
