# -*- coding: utf-8 -*-
from typing import Dict
from config.settings import logger

class EnhancedVetoSystem:
    def __init__(self):
        self.veto_rules = []
        logger.info("‚úÖ EnhancedVetoSystem –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")

    async def check_all_conditions(self, symbol: str, market_data: Dict, indicators: Dict) -> Dict:
        veto_checks = {
            'has_veto': False,
            'veto_reasons': [],
            'warnings': []
        }

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏
        atr = indicators.get('atr_1h', 0)
        if atr > 1000:
            veto_checks['warnings'].append('–í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å')

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ RSI
        rsi = indicators.get('rsi_1h', 50)
        if rsi > 80:
            veto_checks['warnings'].append('RSI –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω')
        elif rsi < 20:
            veto_checks['warnings'].append('RSI –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω')

        logger.debug(f"üõ°Ô∏è Veto –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è {symbol}: {len(veto_checks['warnings'])} –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
        return veto_checks
