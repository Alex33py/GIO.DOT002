#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ tp1_hit, tp2_hit, tp3_hit –≤ —Ç–∞–±–ª–∏—Ü—É signals
"""

import sqlite3

# –ü—É—Ç—å –∫ –ë–î
DB_PATH = "D:\\GIO.BOT.02\\data\\gio_bot.db"


def fix_database():
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –∫–æ–ª–æ–Ω–æ–∫"""
    try:
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏
        cursor.execute("PRAGMA table_info(signals)")
        columns = [row[1] for row in cursor.fetchall()]
        print(f"‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {len(columns)}")

        # –î–æ–±–∞–≤–ª—è–µ–º tp1_hit
        if "tp1_hit" not in columns:
            cursor.execute("ALTER TABLE signals ADD COLUMN tp1_hit INTEGER DEFAULT 0")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ tp1_hit")
        else:
            print("‚è≠Ô∏è  –ö–æ–ª–æ–Ω–∫–∞ tp1_hit —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –î–æ–±–∞–≤–ª—è–µ–º tp2_hit
        if "tp2_hit" not in columns:
            cursor.execute("ALTER TABLE signals ADD COLUMN tp2_hit INTEGER DEFAULT 0")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ tp2_hit")
        else:
            print("‚è≠Ô∏è  –ö–æ–ª–æ–Ω–∫–∞ tp2_hit —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –î–æ–±–∞–≤–ª—è–µ–º tp3_hit
        if "tp3_hit" not in columns:
            cursor.execute("ALTER TABLE signals ADD COLUMN tp3_hit INTEGER DEFAULT 0")
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ tp3_hit")
        else:
            print("‚è≠Ô∏è  –ö–æ–ª–æ–Ω–∫–∞ tp3_hit —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        conn.commit()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("PRAGMA table_info(signals)")
        columns_after = [row[1] for row in cursor.fetchall()]
        print(f"\n‚úÖ –ò–¢–û–ì–û –∫–æ–ª–æ–Ω–æ–∫: {len(columns_after)}")
        print(f"   tp1_hit: {'‚úÖ' if 'tp1_hit' in columns_after else '‚ùå'}")
        print(f"   tp2_hit: {'‚úÖ' if 'tp2_hit' in columns_after else '‚ùå'}")
        print(f"   tp3_hit: {'‚úÖ' if 'tp3_hit' in columns_after else '‚ùå'}")

        conn.close()
        print("\nüéâ –ì–û–¢–û–í–û! –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–ô –ë–û–¢–ê!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")


if __name__ == "__main__":
    fix_database()
