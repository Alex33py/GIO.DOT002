import sqlite3
import os
from config.settings import DATA_DIR

db_path = os.path.join(DATA_DIR, "gio_crypto_bot.db")

print(f"üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_path}\n")

with sqlite3.connect(db_path) as conn:
    cursor = conn.cursor()

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute(
        "SELECT name FROM sqlite_master WHERE type='table' AND name='unified_signals'"
    )
    table_exists = cursor.fetchone()

    if not table_exists:
        print("‚ùå –¢–∞–±–ª–∏—Ü–∞ unified_signals –ù–ï –°–£–©–ï–°–¢–í–£–ï–¢!")
        print("\nüí° –ù—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É. –ó–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞ –æ–¥–∏–Ω —Ä–∞–∑.")
        exit()

    print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ unified_signals —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n")

    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("PRAGMA table_info(unified_signals)")
    columns = cursor.fetchall()
    print("üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã:")
    for col in columns:
        print(f"  - {col[1]} ({col[2]})")

    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π
    cursor.execute("SELECT COUNT(*) FROM unified_signals")
    total_count = cursor.fetchone()[0]
    print(f"\nüìà –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total_count}")

    # 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ ACTIVE –∑–∞–ø–∏—Å–µ–π
    cursor.execute("SELECT COUNT(*) FROM unified_signals WHERE status = 'ACTIVE'")
    active_count = cursor.fetchone()[0]
    print(f"‚úÖ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π: {active_count}")

    # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ ACTIVE —Å —É—Å–ª–æ–≤–∏—è–º–∏
    cursor.execute(
        """
        SELECT COUNT(*) FROM unified_signals
        WHERE status = 'ACTIVE'
            AND scenario_score >= 40
            AND entry_price > 0
    """
    )
    qualified_count = cursor.fetchone()[0]
    print(f"üéØ –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø–∏—Å–µ–π (score>=40, entry>0): {qualified_count}")

    # 6. –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
    print("\nüìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:")
    cursor.execute(
        """
        SELECT id, symbol, direction, entry_price, scenario_id, scenario_score, status
        FROM unified_signals
        ORDER BY timestamp DESC
        LIMIT 5
    """
    )
    rows = cursor.fetchall()

    if rows:
        for row in rows:
            print(f"\n  ID: {row[0]}")
            print(f"  Symbol: {row[1]}")
            print(f"  Direction: {row[2]}")
            print(f"  Entry: ${row[3]:.2f}")
            print(f"  Scenario: {row[4]}")
            print(f"  Score: {row[5]:.1f}%")
            print(f"  Status: {row[6]}")
    else:
        print("  ‚ö†Ô∏è –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π")

    # 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:")
    cursor.execute("SELECT status, COUNT(*) FROM unified_signals GROUP BY status")
    status_counts = cursor.fetchall()
    for status, count in status_counts:
        print(f"  - {status}: {count}")

print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
